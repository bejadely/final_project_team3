<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="com.trip.finalProject.question.mapper.QuestionMapper">
  	 <!-- 페이징 -->
 	<select id="getTotalCount" resultType="int">
 		SELECT COUNT(*)
 		FROM question
 		WHERE answer_member_id = #{answerMemberId}
 	</select>
 	<!-- 전체조회 -->
 	<select id="selectAllQue" resultType="QuestionVO">
	SELECT *
	FROM (
	    SELECT ROWNUM rn, a.*
	    FROM (
	        SELECT
	            question_id,
	            code_val(question_type),
	            question_content,
	            question_date,
	            member_id,
	            answer_result
	            answer_id,
	           	column1 answer_content,
	            answer_date,
	            answer_modify_date,
	            answer_member_id
	        FROM  question
	        where answer_member_id = #{questionVO.answerMemberId}
	        ORDER BY question_date DESC
	    ) a
	) WHERE rn BETWEEN #{pagingVO.start} AND #{pagingVO.end}
 	</select>
 	<!-- 입력 -->
 	 <update id="insertQue" parameterType="QuestionVO">
	 	update question
	 	<set>
	 		column1 = #{answerContent},
	 		answer_date = sysdate
	 	</set>
		WHERE questionId = #{questionId}
 	</update>

 	<!-- 수정 -->
 	<update id="updateQue" parameterType="QuestionVO">
	 	update question
	 	<set>
	 		answer_contexts = #{answerContexts},
	 		answer_modify_date = sysdate
	 	</set>
		WHERE answer_member_id = #{answerMemberId}
 	</update>
 	<!-- 일반사용자 구성 -->
 	<!-- 페이징 -->
 	<select id="getTotalMember" resultType="int">
 	 	SELECT COUNT(*)
 		FROM question
 		WHERE member_id = #{memberId}
 	</select>
 	
 	<!-- 전체조회 -->
 	<select id="selectAllQueMember" resultType="QuestionVO">
	SELECT *
	FROM (
	    SELECT ROWNUM rn, a.*
	    FROM (
	        SELECT
	            question_id,
	            question_type,
	            question_content,
	            question_date,
	            member_id,
	            answer_result
	            answer_id,
	           	column1 answer_content,
	            answer_date,
	            answer_modify_date,
	            answer_member_id
	        FROM  question
	        where member_id = #{questionVO.memberId}
	        ORDER BY question_date DESC
	    ) a
	) WHERE rn BETWEEN #{pagingVO.start} AND #{pagingVO.end}
 	</select>
  
  </mapper>