<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.trip.finalProject.notice.mapper.NoticeMapper"><!-- 구현! 메서드 명 만들어 놓은 것을 여기서 만들겠다. -->



<!--  페이지별로 게시글 확인 row 개수에 따라 -->
   <select id="SelectAllNoticeList" >
		<!-- SELECT *
		FROM (SELECT ROWNUM rn, b.*
			FROM(SELECT * FROM notice order by notice_number desc) b )
		WHERE rn BETWEEN ((#{page}-1) * 10) + 1 
			AND (#{page} * 10)	 -->
				SELECT *
			  	FROM (SELECT ROWNUM rn, a.*
			        	FROM(SELECT notice_Number,title,writer_Id,regist_Date,hit 
							FROM notice  order by notice_number) a )
			  WHERE rn BETWEEN #{start} AND #{end}
			  
						
			<!-- SELECT notice_Number,writer_Id,regist_Date,hit 
		FROM notice  order by notice_number -->
		
	</select>
	
	<!-- 전체 게시글 수 카운트 -->
  		<select id="getAllNoticeCount">
  			SELECT COUNT(*)
  			  FROM notice
  		</select>
	

	
<!-- 검색어를 '포함한' 페이지별 게시글 목록을 조회 -->
	<select id="boardSelect" resultType="NoticeVO">
		SELECT *
		FROM (SELECT ROWNUM rn, b.*
			FROM(SELECT * FROM board WHERE board_content LIKE '%${boardContent}%' order by board_id desc) b )
		WHERE rn BETWEEN (#{page}-1) * 10
			AND (#{page} * 10)	
	</select>
	
<!-- 특정 게시글의 상세 정보를 조회하는 쿼리 글의 id를 사용해서 해당 게시글을 가져옴 -->	
	<select id="boardDetail" resultType="NoticeVO">
		SELECT *
		FROM board
		WHERE board_id = #{boardId}
	</select>
	
<!-- 새로운 게시글을 삽입하는 쿼리. 게시글 번호는 자동생성됨-->	
	<insert id="noticeInsert" parameterType="NoticeVO" >
		<selectKey keyProperty="noticeNumber" resultType = "int" order="BEFORE">
			select NVL(max(notice_Number),0) +1 as notice_Number FROM notice
		</selectKey>
		INSERT INTO notice
		VALUES(
		#{noticeNumber},
		#{title},
		#{content}, 
		sysdate,
		null, 
		#{status}, 
		#{release}, 
		#{noticeType},
		#{writerId},
		 0)
	</insert>
	
<!-- 특정 게시글의 내용을 업데이트하는 쿼리 -->	
	<update id="boardUpdate">
	UPDATE board 
		<set>
		<!-- if문 -> test에는 실려오는 VO객체명 그대로 쓴다. 값이 실려오면 동일한 값이든 아니든 그값으로 변경해라 -->
			<if test="boardContent != null">board_content = #{boardContent} </if>
		</set>
	WHERE board_id = #{boardId}
	</update>
	
<!--  게시글 조회수 증가 -->	
	<update id="boardView">
		UPDATE board SET board_hit = board_hit+1 WHERE board_id = #{boardId}
	</update>
	
<!--  게시글의 댓글 상태를 Y로 변경 -->	
	<update id="boardReple">
		UPDATE board SET board_reple_state = 'Y' WHERE board_id = #{boardId}
	</update>
	
<!--  게시글의 댓글 상태를 N으로 변경 -->	
	<update id="boardRepleN">
		UPDATE board SET board_reple_state = 'N' WHERE board_id = #{boardId}
	</update>
	
<!-- 게시글을 삭제하는 쿼리 -->	
	<delete id="boardDelete">
		DELETE FROM board WHERE board_id = #{boardId}
	</delete>
</mapper>

