<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.trip.finalProject.trip.mapper.TripMapper">
	 <!-- 여행기록 전체조회 페이징 -->
 	<select id="getTotalCount" resultType="int">
 		SELECT COUNT(*)
 		FROM trip_record
 		WHERE trip_save = 'T2' 
			AND trip_disclose = 'O1'
			OR trip_save = 'T3'
			AND trip_disclose = 'O1'
 	</select>
 	
 	<!-- 여행기록 전체조회 아이디 -->
 	<select id="getWriterIdCount" resultType="int" parameterType="String">
 		SELECT COUNT(*)
 		FROM trip_record
 		WHERE trip_save = 'T2' 
			AND trip_disclose = 'O1'
			AND writer_id LIKE '%${keyword}%'
			OR trip_save = 'T3'
			AND trip_disclose = 'O1'
			AND writer_id LIKE '%${keyword}%'
 	</select>
 	
 	<!-- 여행기록 전체조회 타이틀 -->
 	<select id="getTitleCount" resultType="int" parameterType="String">
 		SELECT COUNT(*)
 		FROM trip_record
 		WHERE trip_save = 'T2' 
			AND trip_disclose = 'O1'
			AND trip_title LIKE '%${keyword}%'
			OR trip_save = 'T3'
			AND trip_disclose = 'O1'
			AND trip_title LIKE '%${keyword}%'
 	</select>
 	
 	<!-- 마이페이지 페이징 - 미완료 여행-->
 	 <select id="getPerCount" resultType="int">
 		SELECT COUNT(*)
 		FROM trip_record
 		WHERE trip_save='T2'AND writer_id = #{writerId}
 	</select>
 	
 	<!-- 마이페이지 페이징 - 임시저장-->
 	 <select id="getPerNotCount" resultType="int">
 		SELECT COUNT(*)
 		FROM trip_record
 		WHERE trip_save='T1' AND writer_id = #{writerId}
 	</select>
 	
 	 <!-- 마이페이지 페이징 - 완료 여행-->
 	 <select id="getPerComCount" resultType="int">
 	 <![CDATA[ SELECT COUNT(*)
 		FROM trip_record
 		WHERE trip_save='T3' AND writer_id = #{writerId}]]>
 		
 	</select>
	
	<!-- 여행기록 전체 조회 -->
	<select id="selectAllTrip" resultType="TripVO">		
		SELECT *
		FROM(SELECT ROWNUM rn, a.*
			 FROM(SELECT *
				  FROM trip_record t LEFT OUTER JOIN 
				  	   attached_file a ON t.post_id = a.post_id
				  WHERE trip_save = 'T2' 
				  	AND trip_disclose = 'O1'
				  	OR trip_save = 'T3'
					AND trip_disclose = 'O1'
				  ORDER BY t.post_id DESC) a)
		WHERE rn BETWEEN #{start } AND #{end }
	</select>
	
	<!-- 여행기록 전체 조회 아이디 -->
	<select id="selectAllWriter" resultType="TripVO">		
		SELECT *
		FROM(SELECT ROWNUM rn, a.*
			 FROM(SELECT *
				  FROM trip_record t LEFT OUTER JOIN 
				  	   attached_file a ON t.post_id = a.post_id
				  WHERE trip_save = 'T2' 
				  	AND trip_disclose = 'O1'
				  	AND t.writer_id LIKE '%${tripVO.writerId}%'
				  	OR trip_save = 'T3'
					AND trip_disclose = 'O1'
					AND t.writer_id LIKE '%${tripVO.writerId}%'
				  ORDER BY t.post_id DESC) a)
		WHERE rn BETWEEN #{pagingVO.start} AND #{pagingVO.end}
	</select>
	
	<!-- 여행기록 전체 조회 게시글 -->
	<select id="selectAllTitle" resultType="TripVO">		
		SELECT *
		FROM(SELECT ROWNUM rn, a.*
			 FROM(SELECT *
				  FROM trip_record t LEFT OUTER JOIN 
				  	   attached_file a ON t.post_id = a.post_id
				  WHERE trip_save = 'T2' 
				  	AND trip_disclose = 'O1'
				  	AND t.trip_title LIKE '%${tripVO.tripTitle}%'
				  	OR trip_save = 'T3'
					AND trip_disclose = 'O1'
					AND t.trip_title LIKE '%${tripVO.tripTitle}%'
				  ORDER BY t.post_id DESC) a)
		WHERE rn BETWEEN #{pagingVO.start} AND #{pagingVO.end}
	</select>
	
	<!-- 마이페이지 여행 기록 불러오기 - 계획한 여행(재운) -->
	<select id="selectPerTrip" resultType="TripVO">	
		SELECT *
		FROM(SELECT ROWNUM rn, a.*
			 FROM(SELECT *
				  FROM trip_record
				  WHERE trip_save='T2' AND writer_id = #{tripVO.writerId}
				  ORDER BY regist_day DESC) a)
		WHERE rn BETWEEN #{pagingVO.start } AND #{pagingVO.end }
	</select>
	
	<!-- 저장 정보 업데이트 -->
	<update id="updateDis" parameterType="TripVO">
		UPDATE trip_record
		<set>
			trip_disclose = #{tripDisclose}
		</set>
		WHERE post_id = #{postId}
	</update>
	<!-- 마이페이지 여행기록 임시저장 -->
	<select id="selectPerNotTrip" resultType="TripVO">	
		SELECT *
		FROM(SELECT ROWNUM rn, a.*
			 FROM(SELECT *
				  FROM trip_record
				  WHERE trip_save='T1' AND writer_id = #{tripVO.writerId}
				  ORDER BY regist_day DESC) a)
		WHERE rn BETWEEN #{pagingVO.start } AND #{pagingVO.end }
	</select>
	
	<!-- 마이페이지 여행 기록 불러오기 - 완료된 여행(재운) -->
	<select id="selectPerComTrip" resultType="TripVO">
	<![CDATA[ SELECT *
		FROM(SELECT ROWNUM rn, a.*
			 FROM(SELECT *
				  FROM trip_record
				  WHERE trip_save='T3' AND writer_id = #{tripVO.writerId}
				  ORDER BY regist_day DESC) a)
		WHERE rn BETWEEN #{pagingVO.start } AND #{pagingVO.end } ]]>		
		
	</select>
	
	<!-- 여행기록 상세조회 -->
	<select id="selectTripInfo" resultType="TripVO">
		SELECT writer_id,
			   trip_title,
			   start_day,
			   end_day,
			   regist_day,
			   post_id,
			   hit,
			   trip_save,
			   trip_review_post
		FROM trip_record
		WHERE post_id = #{postId}
	</select>
	
	<!-- 여행기록 조회수 카운트 -->
	<update id="updateTripRecordHit" parameterType="TripVO">
		UPDATE trip_record
		<set>
			hit = NVL((hit), 0) + 1
		</set>
		WHERE post_id = #{postId}
	</update>
	
	
	<!-- 여행기록 등록(임시저장에서 저장상태로 업데이트) -->
	<update id="insertTripInfo" parameterType="TripVO">
		UPDATE trip_record
		<set>
			trip_save = 'T2'
		</set>
		WHERE post_id = #{postId}
	</update>
	  
	<!-- 여행기록 임시저장(임시저장에서 임시저장 상태로 업데이트) -->
	<update id="tsTripInfo" parameterType="TripVO">
		UPDATE trip_record
		<set>
			trip_save = 'T1'
		</set>
		WHERE post_id = #{postId}
	</update>
		
	<!-- 여행기록 등록(등록시 임시저장 상태로 페이지 이동) -->
	<insert id="tsInsertTripInfo" parameterType="TripVO">
		<selectKey keyProperty="postId" resultType="String" order="BEFORE">
			SELECT 'TRR' || (TO_NUMBER(NVL((SUBSTR(MAX(post_id), 4)), (TO_CHAR(SYSDATE, 'YYMMDD') || '0000'))) + 1)
			FROM trip_record
			WHERE SUBSTR(post_id, 4, 6) = TO_CHAR(SYSDATE, 'YYMMDD')
		</selectKey>
		INSERT INTO trip_record
						(
							post_id
							, writer_id
							, trip_title
							, start_day
							, end_day
							, trip_disclose
							, trip_save
							, regist_day
						)
				   VALUES
				        (
							#{postId}
							, #{writerId}
							, #{tripTitle}
							, #{startDay}
							, #{endDay}
							, #{tripDisclose}
							, 'T1'
							, sysdate
				        )
	</insert>
	
	<!-- 여행메모 등록 -->
	<insert id="insertTripMemo" parameterType="TripVO">
		<selectKey keyProperty="memoId" resultType="String" order="BEFORE">
			SELECT 'TRM' || (TO_NUMBER(NVL((SUBSTR(MAX(memo_id), 4)), (TO_CHAR(SYSDATE, 'YYMMDD') || '0000'))) + 1)
			FROM trip_record_memo
			WHERE SUBSTR(memo_id, 4, 6) = TO_CHAR(SYSDATE, 'YYMMDD')
		</selectKey>
		INSERT INTO trip_record_memo
						(
							memo_id
							, content
							, memo_date
							, post_id
							, trip_date
						)
				   VALUES
				        (
							#{memoId}
							<choose>
			   	  				<when test="content != null and !content.equals('')">
			   	  				, #{content}
			   	  				</when>
			   	  				<otherwise>
			   	  				, '입력된 여행 메모가 없습니다.'
			   	  				</otherwise>
			   	  			</choose>
							, sysdate
							, #{postId}
							, #{tripDate}
				        )
	</insert>
	
	<!-- 여행메모 수정 -->
	<update id="modifyMemoData" parameterType="TripVO">
		UPDATE trip_record_memo
		<set>
			content = #{content},
		</set>
		WHERE post_id = #{postId} 
		  AND trip_date = #{tripDate}
	</update>
	
	
	<!-- 여행 메모 조회 -->
	<select id="selectMemoData" resultType="TripVO">
		SELECT m.trip_date
				, m.content
		FROM trip_record t JOIN trip_record_memo m 
							ON t.post_id = m.post_id
		WHERE t.post_id = #{postId}
		ORDER BY m.trip_date
	</select>
	
	<!-- 여행기록 등록 - 여행 경로 맵핑-->
	<insert id="insertTripMapping" parameterType="TripVO">
		<selectKey keyProperty="mapId" resultType="String" order="BEFORE">
			SELECT 'MAP' || (TO_NUMBER(NVL((SUBSTR(MAX(map_id), 4)), (TO_CHAR(SYSDATE, 'YYMMDD') || '0000'))) + 1)
			FROM map
			WHERE SUBSTR(map_id, 4, 6) = TO_CHAR(SYSDATE, 'YYMMDD')
		</selectKey>
		INSERT INTO map
					  (
						map_id
						, map_no
						, map_name
						, map_lat
						, map_lng
						, post_id
						, upload_date
						, trip_date
					  )
				VALUES
					  (
					  	#{mapId}
					  	, #{mapNo}
					  	, #{mapName}
					  	, #{mapLat}
					  	, #{mapLng}
					  	, #{postId}
					  	, sysdate
					  	, #{tripDate}
					  )
	</insert>
	
	<!-- 여행경로 삭제 -->
	<delete id="deleteTripMapping" parameterType="TripVO">
		DELETE FROM map
		WHERE post_id = #{postId} 
		  AND trip_date = #{tripDate} 
	</delete>
	
	<!-- 여행경로 조회 -->
	<select id="selectMapData" resultType="TripVO">
		SELECT m.map_no
				, m.map_id
				, m.map_name
				, m.map_lat
				, m.map_lng
				, m.trip_date
				, m.post_id
		FROM map m JOIN trip_record t 
           			ON m.post_id = t.post_id 
		WHERE t.post_id = #{postId}
		  AND TO_CHAR(m.trip_date) = #{tripDate}
		ORDER BY m.trip_date, m.map_no
	</select>
	
	<!-- 여행기록 수정 -->
	<update id="modifyTripInfo" parameterType="TripVO">
		UPDATE trip_record
		<set>
			<if test="tripTitle != null and !tripTitle.equals('')">
				trip_title = #{tripTitle},
			</if>
			<if test="tripDisclose != null and !tripDisclose.equals('')">
				trip_disclose = #{tripDisclose},
			</if>
		</set>
		WHERE post_id = #{postId}
	</update>
	
	<!--여행후기 등록 -->
	<update id="insertTripReview" parameterType="TripVO">
		UPDATE trip_record
		<set>
			trip_review_post = #{tripReviewPost}
		</set>
		WHERE post_id = #{postId}
	</update>
	
	<!-- 여행기록 삭제 -->
	<delete id="deleteTripInfo" parameterType="TripVO">
		DELETE FROM trip_record
		WHERE post_id = #{postId}
	</delete>
	
	<!-- 여행기록 삭제시 해당 게시글과 관련된 여행경로 삭제 -->
	<delete id="deleteMapData" parameterType="TripVO">
		DELETE FROM map
		WHERE post_id = #{postId}
	</delete>
	
	<!-- 여행기록 삭제시 해당 게시글과 관련된 여행메모 삭제 -->
	<delete id="deleteMemoData" parameterType="TripVO">
		DELETE FROM trip_record_memo
		WHERE post_id = #{postId}
	</delete>
	
	<!-- 여행기간이 지난 여행기록 자동 업데이트 -->
	<update id="completeTripRecord" parameterType="String">
	UPDATE trip_record
			<set>
				trip_save = 'T3',
			</set>
	<![CDATA[WHERE end_day < sysdate]]>
	</update>

</mapper>